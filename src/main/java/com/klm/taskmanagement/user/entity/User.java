/**
 * This package contains entity classes representing the core domain
 * objects of the user management module in the task management system.
 */
package com.klm.taskmanagement.user.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Set;
/**
 * Entity representing a user in the task management system.
 *
 * This class maps to the "users" table in the database and includes
 * fields for user identification, authentication, and authorization.
 *
 * Lombok annotations are used to reduce boilerplate code:
 * - @Data generates getters, setters, equals, hashCode, and toString.
 * - @AllArgsConstructor generates a constructor with all fields.
 * - @NoArgsConstructor generates a no-args constructor.
 * - @Builder allows for building instances using the builder pattern.
 */
@Entity
@Table(name = "users")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class User {
    /**
     * Primary key of the user entity, auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Unique username of the user. Cannot be null.
     */
    @Column(unique = true, nullable = false)
    private String username;
    /**
     * Password of the user. Cannot be null.
     * Should be stored securely (e.g., hashed).
     */
    @Column(nullable = false)
    private String password;

    /**
     * Email address of the user.
     */
    private String email;
    /**
     * The roles assigned to the user, defining their permissions.
     * Stored as a collection of strings representing the role names.
     * Fetched eagerly to make roles available immediately with the user.
     */
    @ElementCollection(fetch = FetchType.EAGER)
    @Enumerated(EnumType.STRING)
    private Set<Role> roles;
}
